// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: GetPlayerTokenRsp.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Weedwacker.Shared.Network.Proto {

  /// <summary>Holder for reflection information generated from GetPlayerTokenRsp.proto</summary>
  public static partial class GetPlayerTokenRspReflection {

    #region Descriptor
    /// <summary>File descriptor for GetPlayerTokenRsp.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GetPlayerTokenRspReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChdHZXRQbGF5ZXJUb2tlblJzcC5wcm90byLfBQoRR2V0UGxheWVyVG9rZW5S",
            "c3ASEQoIYmlydGhkYXkYqQcgASgJEg8KB3JldGNvZGUYAiABKAUSGwoTc2Vj",
            "dXJpdHlfY21kX2J1ZmZlchgGIAEoDBIXCg9zZWNyZXRfa2V5X3NlZWQYDSAB",
            "KAQSFQoMY291bnRyeV9jb2RlGN0PIAEoCRIWCg5leHRyYV9iaW5fZGF0YRgD",
            "IAEoDBISCgpzZWNyZXRfa2V5GA8gASgJEhwKE1VuazI3MDBfTk9KUEVISUJE",
            "SkgYmQwgASgNEhoKEmJsYWNrX3VpZF9lbmRfdGltZRgOIAEoDRIMCgN0YWcY",
            "4wwgASgNEg0KBXRva2VuGAsgASgJEg4KBmdtX3VpZBgKIAEoDRITCgpjaGFu",
            "bmVsX2lkGIAHIAEoDRIPCgZwc25faWQYkw4gASgJEhYKDWNsaWVudF9pcF9z",
            "dHIY3AYgASgJEgsKA21zZxgHIAEoCRIUCgxhY2NvdW50X3R5cGUYBSABKA0S",
            "FwoOc3ViX2NoYW5uZWxfaWQYig4gASgNEhwKE1VuazI3MDBfRkxCS1BDUEdQ",
            "REgY7A8gASgIEhcKDmVuY3J5cHRlZF9zZWVkGNULIAEoCRIcChRpc19wcm9m",
            "aWNpZW50X3BsYXllchgJIAEoCBIcChNVbmsyODAwX0JQSk9CTE5DQkVJGJQJ",
            "IAEoDRILCgN1aWQYASABKA0SEwoLYWNjb3VudF91aWQYDCABKAkSEAoIaXNf",
            "Z3Vlc3QYBCABKAgSIgoZY2xpZW50X3ZlcnNpb25fcmFuZG9tX2tleRj5CyAB",
            "KAkSHAoTVW5rMjgwMF9OTkJGQ0VBT0VQQhjoDCADKA0SFQoNcGxhdGZvcm1f",
            "dHlwZRgIIAEoDRIVCgxyZWdfcGxhdGZvcm0Y2AggASgNEhwKE2lzX2xvZ2lu",
            "X3doaXRlX2xpc3QYvQQgASgIEhcKDnNlZWRfc2lnbmF0dXJlGPQIIAEoCUIi",
            "qgIfV2VlZHdhY2tlci5TaGFyZWQuTmV0d29yay5Qcm90b2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Weedwacker.Shared.Network.Proto.GetPlayerTokenRsp), global::Weedwacker.Shared.Network.Proto.GetPlayerTokenRsp.Parser, new[]{ "Birthday", "Retcode", "SecurityCmdBuffer", "SecretKeySeed", "CountryCode", "ExtraBinData", "SecretKey", "Unk2700NOJPEHIBDJH", "BlackUidEndTime", "Tag", "Token", "GmUid", "ChannelId", "PsnId", "ClientIpStr", "Msg", "AccountType", "SubChannelId", "Unk2700FLBKPCPGPDH", "EncryptedSeed", "IsProficientPlayer", "Unk2800BPJOBLNCBEI", "Uid", "AccountUid", "IsGuest", "ClientVersionRandomKey", "Unk2800NNBFCEAOEPB", "PlatformType", "RegPlatform", "IsLoginWhiteList", "SeedSignature" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// CmdId: 198
  /// EnetChannelId: 0
  /// EnetIsReliable: true
  /// </summary>
  public sealed partial class GetPlayerTokenRsp : pb::IMessage<GetPlayerTokenRsp>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetPlayerTokenRsp> _parser = new pb::MessageParser<GetPlayerTokenRsp>(() => new GetPlayerTokenRsp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetPlayerTokenRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Weedwacker.Shared.Network.Proto.GetPlayerTokenRspReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetPlayerTokenRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetPlayerTokenRsp(GetPlayerTokenRsp other) : this() {
      birthday_ = other.birthday_;
      retcode_ = other.retcode_;
      securityCmdBuffer_ = other.securityCmdBuffer_;
      secretKeySeed_ = other.secretKeySeed_;
      countryCode_ = other.countryCode_;
      extraBinData_ = other.extraBinData_;
      secretKey_ = other.secretKey_;
      unk2700NOJPEHIBDJH_ = other.unk2700NOJPEHIBDJH_;
      blackUidEndTime_ = other.blackUidEndTime_;
      tag_ = other.tag_;
      token_ = other.token_;
      gmUid_ = other.gmUid_;
      channelId_ = other.channelId_;
      psnId_ = other.psnId_;
      clientIpStr_ = other.clientIpStr_;
      msg_ = other.msg_;
      accountType_ = other.accountType_;
      subChannelId_ = other.subChannelId_;
      unk2700FLBKPCPGPDH_ = other.unk2700FLBKPCPGPDH_;
      encryptedSeed_ = other.encryptedSeed_;
      isProficientPlayer_ = other.isProficientPlayer_;
      unk2800BPJOBLNCBEI_ = other.unk2800BPJOBLNCBEI_;
      uid_ = other.uid_;
      accountUid_ = other.accountUid_;
      isGuest_ = other.isGuest_;
      clientVersionRandomKey_ = other.clientVersionRandomKey_;
      unk2800NNBFCEAOEPB_ = other.unk2800NNBFCEAOEPB_.Clone();
      platformType_ = other.platformType_;
      regPlatform_ = other.regPlatform_;
      isLoginWhiteList_ = other.isLoginWhiteList_;
      seedSignature_ = other.seedSignature_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetPlayerTokenRsp Clone() {
      return new GetPlayerTokenRsp(this);
    }

    /// <summary>Field number for the "birthday" field.</summary>
    public const int BirthdayFieldNumber = 937;
    private string birthday_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Birthday {
      get { return birthday_; }
      set {
        birthday_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "retcode" field.</summary>
    public const int RetcodeFieldNumber = 2;
    private int retcode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Retcode {
      get { return retcode_; }
      set {
        retcode_ = value;
      }
    }

    /// <summary>Field number for the "security_cmd_buffer" field.</summary>
    public const int SecurityCmdBufferFieldNumber = 6;
    private pb::ByteString securityCmdBuffer_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString SecurityCmdBuffer {
      get { return securityCmdBuffer_; }
      set {
        securityCmdBuffer_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "secret_key_seed" field.</summary>
    public const int SecretKeySeedFieldNumber = 13;
    private ulong secretKeySeed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong SecretKeySeed {
      get { return secretKeySeed_; }
      set {
        secretKeySeed_ = value;
      }
    }

    /// <summary>Field number for the "country_code" field.</summary>
    public const int CountryCodeFieldNumber = 2013;
    private string countryCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string CountryCode {
      get { return countryCode_; }
      set {
        countryCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "extra_bin_data" field.</summary>
    public const int ExtraBinDataFieldNumber = 3;
    private pb::ByteString extraBinData_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString ExtraBinData {
      get { return extraBinData_; }
      set {
        extraBinData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "secret_key" field.</summary>
    public const int SecretKeyFieldNumber = 15;
    private string secretKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SecretKey {
      get { return secretKey_; }
      set {
        secretKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Unk2700_NOJPEHIBDJH" field.</summary>
    public const int Unk2700NOJPEHIBDJHFieldNumber = 1561;
    private uint unk2700NOJPEHIBDJH_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Unk2700NOJPEHIBDJH {
      get { return unk2700NOJPEHIBDJH_; }
      set {
        unk2700NOJPEHIBDJH_ = value;
      }
    }

    /// <summary>Field number for the "black_uid_end_time" field.</summary>
    public const int BlackUidEndTimeFieldNumber = 14;
    private uint blackUidEndTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BlackUidEndTime {
      get { return blackUidEndTime_; }
      set {
        blackUidEndTime_ = value;
      }
    }

    /// <summary>Field number for the "tag" field.</summary>
    public const int TagFieldNumber = 1635;
    private uint tag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Tag {
      get { return tag_; }
      set {
        tag_ = value;
      }
    }

    /// <summary>Field number for the "token" field.</summary>
    public const int TokenFieldNumber = 11;
    private string token_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Token {
      get { return token_; }
      set {
        token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "gm_uid" field.</summary>
    public const int GmUidFieldNumber = 10;
    private uint gmUid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint GmUid {
      get { return gmUid_; }
      set {
        gmUid_ = value;
      }
    }

    /// <summary>Field number for the "channel_id" field.</summary>
    public const int ChannelIdFieldNumber = 896;
    private uint channelId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ChannelId {
      get { return channelId_; }
      set {
        channelId_ = value;
      }
    }

    /// <summary>Field number for the "psn_id" field.</summary>
    public const int PsnIdFieldNumber = 1811;
    private string psnId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PsnId {
      get { return psnId_; }
      set {
        psnId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "client_ip_str" field.</summary>
    public const int ClientIpStrFieldNumber = 860;
    private string clientIpStr_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ClientIpStr {
      get { return clientIpStr_; }
      set {
        clientIpStr_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "msg" field.</summary>
    public const int MsgFieldNumber = 7;
    private string msg_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Msg {
      get { return msg_; }
      set {
        msg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "account_type" field.</summary>
    public const int AccountTypeFieldNumber = 5;
    private uint accountType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint AccountType {
      get { return accountType_; }
      set {
        accountType_ = value;
      }
    }

    /// <summary>Field number for the "sub_channel_id" field.</summary>
    public const int SubChannelIdFieldNumber = 1802;
    private uint subChannelId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SubChannelId {
      get { return subChannelId_; }
      set {
        subChannelId_ = value;
      }
    }

    /// <summary>Field number for the "Unk2700_FLBKPCPGPDH" field.</summary>
    public const int Unk2700FLBKPCPGPDHFieldNumber = 2028;
    private bool unk2700FLBKPCPGPDH_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Unk2700FLBKPCPGPDH {
      get { return unk2700FLBKPCPGPDH_; }
      set {
        unk2700FLBKPCPGPDH_ = value;
      }
    }

    /// <summary>Field number for the "encrypted_seed" field.</summary>
    public const int EncryptedSeedFieldNumber = 1493;
    private string encryptedSeed_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string EncryptedSeed {
      get { return encryptedSeed_; }
      set {
        encryptedSeed_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "is_proficient_player" field.</summary>
    public const int IsProficientPlayerFieldNumber = 9;
    private bool isProficientPlayer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsProficientPlayer {
      get { return isProficientPlayer_; }
      set {
        isProficientPlayer_ = value;
      }
    }

    /// <summary>Field number for the "Unk2800_BPJOBLNCBEI" field.</summary>
    public const int Unk2800BPJOBLNCBEIFieldNumber = 1172;
    private uint unk2800BPJOBLNCBEI_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Unk2800BPJOBLNCBEI {
      get { return unk2800BPJOBLNCBEI_; }
      set {
        unk2800BPJOBLNCBEI_ = value;
      }
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 1;
    private uint uid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Uid {
      get { return uid_; }
      set {
        uid_ = value;
      }
    }

    /// <summary>Field number for the "account_uid" field.</summary>
    public const int AccountUidFieldNumber = 12;
    private string accountUid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AccountUid {
      get { return accountUid_; }
      set {
        accountUid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "is_guest" field.</summary>
    public const int IsGuestFieldNumber = 4;
    private bool isGuest_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsGuest {
      get { return isGuest_; }
      set {
        isGuest_ = value;
      }
    }

    /// <summary>Field number for the "client_version_random_key" field.</summary>
    public const int ClientVersionRandomKeyFieldNumber = 1529;
    private string clientVersionRandomKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ClientVersionRandomKey {
      get { return clientVersionRandomKey_; }
      set {
        clientVersionRandomKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Unk2800_NNBFCEAOEPB" field.</summary>
    public const int Unk2800NNBFCEAOEPBFieldNumber = 1640;
    private static readonly pb::FieldCodec<uint> _repeated_unk2800NNBFCEAOEPB_codec
        = pb::FieldCodec.ForUInt32(13122);
    private readonly pbc::RepeatedField<uint> unk2800NNBFCEAOEPB_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<uint> Unk2800NNBFCEAOEPB {
      get { return unk2800NNBFCEAOEPB_; }
    }

    /// <summary>Field number for the "platform_type" field.</summary>
    public const int PlatformTypeFieldNumber = 8;
    private uint platformType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PlatformType {
      get { return platformType_; }
      set {
        platformType_ = value;
      }
    }

    /// <summary>Field number for the "reg_platform" field.</summary>
    public const int RegPlatformFieldNumber = 1112;
    private uint regPlatform_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RegPlatform {
      get { return regPlatform_; }
      set {
        regPlatform_ = value;
      }
    }

    /// <summary>Field number for the "is_login_white_list" field.</summary>
    public const int IsLoginWhiteListFieldNumber = 573;
    private bool isLoginWhiteList_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsLoginWhiteList {
      get { return isLoginWhiteList_; }
      set {
        isLoginWhiteList_ = value;
      }
    }

    /// <summary>Field number for the "seed_signature" field.</summary>
    public const int SeedSignatureFieldNumber = 1140;
    private string seedSignature_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SeedSignature {
      get { return seedSignature_; }
      set {
        seedSignature_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetPlayerTokenRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetPlayerTokenRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Birthday != other.Birthday) return false;
      if (Retcode != other.Retcode) return false;
      if (SecurityCmdBuffer != other.SecurityCmdBuffer) return false;
      if (SecretKeySeed != other.SecretKeySeed) return false;
      if (CountryCode != other.CountryCode) return false;
      if (ExtraBinData != other.ExtraBinData) return false;
      if (SecretKey != other.SecretKey) return false;
      if (Unk2700NOJPEHIBDJH != other.Unk2700NOJPEHIBDJH) return false;
      if (BlackUidEndTime != other.BlackUidEndTime) return false;
      if (Tag != other.Tag) return false;
      if (Token != other.Token) return false;
      if (GmUid != other.GmUid) return false;
      if (ChannelId != other.ChannelId) return false;
      if (PsnId != other.PsnId) return false;
      if (ClientIpStr != other.ClientIpStr) return false;
      if (Msg != other.Msg) return false;
      if (AccountType != other.AccountType) return false;
      if (SubChannelId != other.SubChannelId) return false;
      if (Unk2700FLBKPCPGPDH != other.Unk2700FLBKPCPGPDH) return false;
      if (EncryptedSeed != other.EncryptedSeed) return false;
      if (IsProficientPlayer != other.IsProficientPlayer) return false;
      if (Unk2800BPJOBLNCBEI != other.Unk2800BPJOBLNCBEI) return false;
      if (Uid != other.Uid) return false;
      if (AccountUid != other.AccountUid) return false;
      if (IsGuest != other.IsGuest) return false;
      if (ClientVersionRandomKey != other.ClientVersionRandomKey) return false;
      if(!unk2800NNBFCEAOEPB_.Equals(other.unk2800NNBFCEAOEPB_)) return false;
      if (PlatformType != other.PlatformType) return false;
      if (RegPlatform != other.RegPlatform) return false;
      if (IsLoginWhiteList != other.IsLoginWhiteList) return false;
      if (SeedSignature != other.SeedSignature) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Birthday.Length != 0) hash ^= Birthday.GetHashCode();
      if (Retcode != 0) hash ^= Retcode.GetHashCode();
      if (SecurityCmdBuffer.Length != 0) hash ^= SecurityCmdBuffer.GetHashCode();
      if (SecretKeySeed != 0UL) hash ^= SecretKeySeed.GetHashCode();
      if (CountryCode.Length != 0) hash ^= CountryCode.GetHashCode();
      if (ExtraBinData.Length != 0) hash ^= ExtraBinData.GetHashCode();
      if (SecretKey.Length != 0) hash ^= SecretKey.GetHashCode();
      if (Unk2700NOJPEHIBDJH != 0) hash ^= Unk2700NOJPEHIBDJH.GetHashCode();
      if (BlackUidEndTime != 0) hash ^= BlackUidEndTime.GetHashCode();
      if (Tag != 0) hash ^= Tag.GetHashCode();
      if (Token.Length != 0) hash ^= Token.GetHashCode();
      if (GmUid != 0) hash ^= GmUid.GetHashCode();
      if (ChannelId != 0) hash ^= ChannelId.GetHashCode();
      if (PsnId.Length != 0) hash ^= PsnId.GetHashCode();
      if (ClientIpStr.Length != 0) hash ^= ClientIpStr.GetHashCode();
      if (Msg.Length != 0) hash ^= Msg.GetHashCode();
      if (AccountType != 0) hash ^= AccountType.GetHashCode();
      if (SubChannelId != 0) hash ^= SubChannelId.GetHashCode();
      if (Unk2700FLBKPCPGPDH != false) hash ^= Unk2700FLBKPCPGPDH.GetHashCode();
      if (EncryptedSeed.Length != 0) hash ^= EncryptedSeed.GetHashCode();
      if (IsProficientPlayer != false) hash ^= IsProficientPlayer.GetHashCode();
      if (Unk2800BPJOBLNCBEI != 0) hash ^= Unk2800BPJOBLNCBEI.GetHashCode();
      if (Uid != 0) hash ^= Uid.GetHashCode();
      if (AccountUid.Length != 0) hash ^= AccountUid.GetHashCode();
      if (IsGuest != false) hash ^= IsGuest.GetHashCode();
      if (ClientVersionRandomKey.Length != 0) hash ^= ClientVersionRandomKey.GetHashCode();
      hash ^= unk2800NNBFCEAOEPB_.GetHashCode();
      if (PlatformType != 0) hash ^= PlatformType.GetHashCode();
      if (RegPlatform != 0) hash ^= RegPlatform.GetHashCode();
      if (IsLoginWhiteList != false) hash ^= IsLoginWhiteList.GetHashCode();
      if (SeedSignature.Length != 0) hash ^= SeedSignature.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Uid != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Uid);
      }
      if (Retcode != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Retcode);
      }
      if (ExtraBinData.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(ExtraBinData);
      }
      if (IsGuest != false) {
        output.WriteRawTag(32);
        output.WriteBool(IsGuest);
      }
      if (AccountType != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(AccountType);
      }
      if (SecurityCmdBuffer.Length != 0) {
        output.WriteRawTag(50);
        output.WriteBytes(SecurityCmdBuffer);
      }
      if (Msg.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Msg);
      }
      if (PlatformType != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(PlatformType);
      }
      if (IsProficientPlayer != false) {
        output.WriteRawTag(72);
        output.WriteBool(IsProficientPlayer);
      }
      if (GmUid != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(GmUid);
      }
      if (Token.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(Token);
      }
      if (AccountUid.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(AccountUid);
      }
      if (SecretKeySeed != 0UL) {
        output.WriteRawTag(104);
        output.WriteUInt64(SecretKeySeed);
      }
      if (BlackUidEndTime != 0) {
        output.WriteRawTag(112);
        output.WriteUInt32(BlackUidEndTime);
      }
      if (SecretKey.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(SecretKey);
      }
      if (IsLoginWhiteList != false) {
        output.WriteRawTag(232, 35);
        output.WriteBool(IsLoginWhiteList);
      }
      if (ClientIpStr.Length != 0) {
        output.WriteRawTag(226, 53);
        output.WriteString(ClientIpStr);
      }
      if (ChannelId != 0) {
        output.WriteRawTag(128, 56);
        output.WriteUInt32(ChannelId);
      }
      if (Birthday.Length != 0) {
        output.WriteRawTag(202, 58);
        output.WriteString(Birthday);
      }
      if (RegPlatform != 0) {
        output.WriteRawTag(192, 69);
        output.WriteUInt32(RegPlatform);
      }
      if (SeedSignature.Length != 0) {
        output.WriteRawTag(162, 71);
        output.WriteString(SeedSignature);
      }
      if (Unk2800BPJOBLNCBEI != 0) {
        output.WriteRawTag(160, 73);
        output.WriteUInt32(Unk2800BPJOBLNCBEI);
      }
      if (EncryptedSeed.Length != 0) {
        output.WriteRawTag(170, 93);
        output.WriteString(EncryptedSeed);
      }
      if (ClientVersionRandomKey.Length != 0) {
        output.WriteRawTag(202, 95);
        output.WriteString(ClientVersionRandomKey);
      }
      if (Unk2700NOJPEHIBDJH != 0) {
        output.WriteRawTag(200, 97);
        output.WriteUInt32(Unk2700NOJPEHIBDJH);
      }
      if (Tag != 0) {
        output.WriteRawTag(152, 102);
        output.WriteUInt32(Tag);
      }
      unk2800NNBFCEAOEPB_.WriteTo(output, _repeated_unk2800NNBFCEAOEPB_codec);
      if (SubChannelId != 0) {
        output.WriteRawTag(208, 112);
        output.WriteUInt32(SubChannelId);
      }
      if (PsnId.Length != 0) {
        output.WriteRawTag(154, 113);
        output.WriteString(PsnId);
      }
      if (CountryCode.Length != 0) {
        output.WriteRawTag(234, 125);
        output.WriteString(CountryCode);
      }
      if (Unk2700FLBKPCPGPDH != false) {
        output.WriteRawTag(224, 126);
        output.WriteBool(Unk2700FLBKPCPGPDH);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Uid != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Uid);
      }
      if (Retcode != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Retcode);
      }
      if (ExtraBinData.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(ExtraBinData);
      }
      if (IsGuest != false) {
        output.WriteRawTag(32);
        output.WriteBool(IsGuest);
      }
      if (AccountType != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(AccountType);
      }
      if (SecurityCmdBuffer.Length != 0) {
        output.WriteRawTag(50);
        output.WriteBytes(SecurityCmdBuffer);
      }
      if (Msg.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Msg);
      }
      if (PlatformType != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(PlatformType);
      }
      if (IsProficientPlayer != false) {
        output.WriteRawTag(72);
        output.WriteBool(IsProficientPlayer);
      }
      if (GmUid != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(GmUid);
      }
      if (Token.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(Token);
      }
      if (AccountUid.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(AccountUid);
      }
      if (SecretKeySeed != 0UL) {
        output.WriteRawTag(104);
        output.WriteUInt64(SecretKeySeed);
      }
      if (BlackUidEndTime != 0) {
        output.WriteRawTag(112);
        output.WriteUInt32(BlackUidEndTime);
      }
      if (SecretKey.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(SecretKey);
      }
      if (IsLoginWhiteList != false) {
        output.WriteRawTag(232, 35);
        output.WriteBool(IsLoginWhiteList);
      }
      if (ClientIpStr.Length != 0) {
        output.WriteRawTag(226, 53);
        output.WriteString(ClientIpStr);
      }
      if (ChannelId != 0) {
        output.WriteRawTag(128, 56);
        output.WriteUInt32(ChannelId);
      }
      if (Birthday.Length != 0) {
        output.WriteRawTag(202, 58);
        output.WriteString(Birthday);
      }
      if (RegPlatform != 0) {
        output.WriteRawTag(192, 69);
        output.WriteUInt32(RegPlatform);
      }
      if (SeedSignature.Length != 0) {
        output.WriteRawTag(162, 71);
        output.WriteString(SeedSignature);
      }
      if (Unk2800BPJOBLNCBEI != 0) {
        output.WriteRawTag(160, 73);
        output.WriteUInt32(Unk2800BPJOBLNCBEI);
      }
      if (EncryptedSeed.Length != 0) {
        output.WriteRawTag(170, 93);
        output.WriteString(EncryptedSeed);
      }
      if (ClientVersionRandomKey.Length != 0) {
        output.WriteRawTag(202, 95);
        output.WriteString(ClientVersionRandomKey);
      }
      if (Unk2700NOJPEHIBDJH != 0) {
        output.WriteRawTag(200, 97);
        output.WriteUInt32(Unk2700NOJPEHIBDJH);
      }
      if (Tag != 0) {
        output.WriteRawTag(152, 102);
        output.WriteUInt32(Tag);
      }
      unk2800NNBFCEAOEPB_.WriteTo(ref output, _repeated_unk2800NNBFCEAOEPB_codec);
      if (SubChannelId != 0) {
        output.WriteRawTag(208, 112);
        output.WriteUInt32(SubChannelId);
      }
      if (PsnId.Length != 0) {
        output.WriteRawTag(154, 113);
        output.WriteString(PsnId);
      }
      if (CountryCode.Length != 0) {
        output.WriteRawTag(234, 125);
        output.WriteString(CountryCode);
      }
      if (Unk2700FLBKPCPGPDH != false) {
        output.WriteRawTag(224, 126);
        output.WriteBool(Unk2700FLBKPCPGPDH);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Birthday.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Birthday);
      }
      if (Retcode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Retcode);
      }
      if (SecurityCmdBuffer.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(SecurityCmdBuffer);
      }
      if (SecretKeySeed != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(SecretKeySeed);
      }
      if (CountryCode.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(CountryCode);
      }
      if (ExtraBinData.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ExtraBinData);
      }
      if (SecretKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SecretKey);
      }
      if (Unk2700NOJPEHIBDJH != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Unk2700NOJPEHIBDJH);
      }
      if (BlackUidEndTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BlackUidEndTime);
      }
      if (Tag != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Tag);
      }
      if (Token.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Token);
      }
      if (GmUid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GmUid);
      }
      if (ChannelId != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(ChannelId);
      }
      if (PsnId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(PsnId);
      }
      if (ClientIpStr.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ClientIpStr);
      }
      if (Msg.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Msg);
      }
      if (AccountType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AccountType);
      }
      if (SubChannelId != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(SubChannelId);
      }
      if (Unk2700FLBKPCPGPDH != false) {
        size += 2 + 1;
      }
      if (EncryptedSeed.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(EncryptedSeed);
      }
      if (IsProficientPlayer != false) {
        size += 1 + 1;
      }
      if (Unk2800BPJOBLNCBEI != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Unk2800BPJOBLNCBEI);
      }
      if (Uid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Uid);
      }
      if (AccountUid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AccountUid);
      }
      if (IsGuest != false) {
        size += 1 + 1;
      }
      if (ClientVersionRandomKey.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ClientVersionRandomKey);
      }
      size += unk2800NNBFCEAOEPB_.CalculateSize(_repeated_unk2800NNBFCEAOEPB_codec);
      if (PlatformType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PlatformType);
      }
      if (RegPlatform != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(RegPlatform);
      }
      if (IsLoginWhiteList != false) {
        size += 2 + 1;
      }
      if (SeedSignature.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(SeedSignature);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetPlayerTokenRsp other) {
      if (other == null) {
        return;
      }
      if (other.Birthday.Length != 0) {
        Birthday = other.Birthday;
      }
      if (other.Retcode != 0) {
        Retcode = other.Retcode;
      }
      if (other.SecurityCmdBuffer.Length != 0) {
        SecurityCmdBuffer = other.SecurityCmdBuffer;
      }
      if (other.SecretKeySeed != 0UL) {
        SecretKeySeed = other.SecretKeySeed;
      }
      if (other.CountryCode.Length != 0) {
        CountryCode = other.CountryCode;
      }
      if (other.ExtraBinData.Length != 0) {
        ExtraBinData = other.ExtraBinData;
      }
      if (other.SecretKey.Length != 0) {
        SecretKey = other.SecretKey;
      }
      if (other.Unk2700NOJPEHIBDJH != 0) {
        Unk2700NOJPEHIBDJH = other.Unk2700NOJPEHIBDJH;
      }
      if (other.BlackUidEndTime != 0) {
        BlackUidEndTime = other.BlackUidEndTime;
      }
      if (other.Tag != 0) {
        Tag = other.Tag;
      }
      if (other.Token.Length != 0) {
        Token = other.Token;
      }
      if (other.GmUid != 0) {
        GmUid = other.GmUid;
      }
      if (other.ChannelId != 0) {
        ChannelId = other.ChannelId;
      }
      if (other.PsnId.Length != 0) {
        PsnId = other.PsnId;
      }
      if (other.ClientIpStr.Length != 0) {
        ClientIpStr = other.ClientIpStr;
      }
      if (other.Msg.Length != 0) {
        Msg = other.Msg;
      }
      if (other.AccountType != 0) {
        AccountType = other.AccountType;
      }
      if (other.SubChannelId != 0) {
        SubChannelId = other.SubChannelId;
      }
      if (other.Unk2700FLBKPCPGPDH != false) {
        Unk2700FLBKPCPGPDH = other.Unk2700FLBKPCPGPDH;
      }
      if (other.EncryptedSeed.Length != 0) {
        EncryptedSeed = other.EncryptedSeed;
      }
      if (other.IsProficientPlayer != false) {
        IsProficientPlayer = other.IsProficientPlayer;
      }
      if (other.Unk2800BPJOBLNCBEI != 0) {
        Unk2800BPJOBLNCBEI = other.Unk2800BPJOBLNCBEI;
      }
      if (other.Uid != 0) {
        Uid = other.Uid;
      }
      if (other.AccountUid.Length != 0) {
        AccountUid = other.AccountUid;
      }
      if (other.IsGuest != false) {
        IsGuest = other.IsGuest;
      }
      if (other.ClientVersionRandomKey.Length != 0) {
        ClientVersionRandomKey = other.ClientVersionRandomKey;
      }
      unk2800NNBFCEAOEPB_.Add(other.unk2800NNBFCEAOEPB_);
      if (other.PlatformType != 0) {
        PlatformType = other.PlatformType;
      }
      if (other.RegPlatform != 0) {
        RegPlatform = other.RegPlatform;
      }
      if (other.IsLoginWhiteList != false) {
        IsLoginWhiteList = other.IsLoginWhiteList;
      }
      if (other.SeedSignature.Length != 0) {
        SeedSignature = other.SeedSignature;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Uid = input.ReadUInt32();
            break;
          }
          case 16: {
            Retcode = input.ReadInt32();
            break;
          }
          case 26: {
            ExtraBinData = input.ReadBytes();
            break;
          }
          case 32: {
            IsGuest = input.ReadBool();
            break;
          }
          case 40: {
            AccountType = input.ReadUInt32();
            break;
          }
          case 50: {
            SecurityCmdBuffer = input.ReadBytes();
            break;
          }
          case 58: {
            Msg = input.ReadString();
            break;
          }
          case 64: {
            PlatformType = input.ReadUInt32();
            break;
          }
          case 72: {
            IsProficientPlayer = input.ReadBool();
            break;
          }
          case 80: {
            GmUid = input.ReadUInt32();
            break;
          }
          case 90: {
            Token = input.ReadString();
            break;
          }
          case 98: {
            AccountUid = input.ReadString();
            break;
          }
          case 104: {
            SecretKeySeed = input.ReadUInt64();
            break;
          }
          case 112: {
            BlackUidEndTime = input.ReadUInt32();
            break;
          }
          case 122: {
            SecretKey = input.ReadString();
            break;
          }
          case 4584: {
            IsLoginWhiteList = input.ReadBool();
            break;
          }
          case 6882: {
            ClientIpStr = input.ReadString();
            break;
          }
          case 7168: {
            ChannelId = input.ReadUInt32();
            break;
          }
          case 7498: {
            Birthday = input.ReadString();
            break;
          }
          case 8896: {
            RegPlatform = input.ReadUInt32();
            break;
          }
          case 9122: {
            SeedSignature = input.ReadString();
            break;
          }
          case 9376: {
            Unk2800BPJOBLNCBEI = input.ReadUInt32();
            break;
          }
          case 11946: {
            EncryptedSeed = input.ReadString();
            break;
          }
          case 12234: {
            ClientVersionRandomKey = input.ReadString();
            break;
          }
          case 12488: {
            Unk2700NOJPEHIBDJH = input.ReadUInt32();
            break;
          }
          case 13080: {
            Tag = input.ReadUInt32();
            break;
          }
          case 13122:
          case 13120: {
            unk2800NNBFCEAOEPB_.AddEntriesFrom(input, _repeated_unk2800NNBFCEAOEPB_codec);
            break;
          }
          case 14416: {
            SubChannelId = input.ReadUInt32();
            break;
          }
          case 14490: {
            PsnId = input.ReadString();
            break;
          }
          case 16106: {
            CountryCode = input.ReadString();
            break;
          }
          case 16224: {
            Unk2700FLBKPCPGPDH = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Uid = input.ReadUInt32();
            break;
          }
          case 16: {
            Retcode = input.ReadInt32();
            break;
          }
          case 26: {
            ExtraBinData = input.ReadBytes();
            break;
          }
          case 32: {
            IsGuest = input.ReadBool();
            break;
          }
          case 40: {
            AccountType = input.ReadUInt32();
            break;
          }
          case 50: {
            SecurityCmdBuffer = input.ReadBytes();
            break;
          }
          case 58: {
            Msg = input.ReadString();
            break;
          }
          case 64: {
            PlatformType = input.ReadUInt32();
            break;
          }
          case 72: {
            IsProficientPlayer = input.ReadBool();
            break;
          }
          case 80: {
            GmUid = input.ReadUInt32();
            break;
          }
          case 90: {
            Token = input.ReadString();
            break;
          }
          case 98: {
            AccountUid = input.ReadString();
            break;
          }
          case 104: {
            SecretKeySeed = input.ReadUInt64();
            break;
          }
          case 112: {
            BlackUidEndTime = input.ReadUInt32();
            break;
          }
          case 122: {
            SecretKey = input.ReadString();
            break;
          }
          case 4584: {
            IsLoginWhiteList = input.ReadBool();
            break;
          }
          case 6882: {
            ClientIpStr = input.ReadString();
            break;
          }
          case 7168: {
            ChannelId = input.ReadUInt32();
            break;
          }
          case 7498: {
            Birthday = input.ReadString();
            break;
          }
          case 8896: {
            RegPlatform = input.ReadUInt32();
            break;
          }
          case 9122: {
            SeedSignature = input.ReadString();
            break;
          }
          case 9376: {
            Unk2800BPJOBLNCBEI = input.ReadUInt32();
            break;
          }
          case 11946: {
            EncryptedSeed = input.ReadString();
            break;
          }
          case 12234: {
            ClientVersionRandomKey = input.ReadString();
            break;
          }
          case 12488: {
            Unk2700NOJPEHIBDJH = input.ReadUInt32();
            break;
          }
          case 13080: {
            Tag = input.ReadUInt32();
            break;
          }
          case 13122:
          case 13120: {
            unk2800NNBFCEAOEPB_.AddEntriesFrom(ref input, _repeated_unk2800NNBFCEAOEPB_codec);
            break;
          }
          case 14416: {
            SubChannelId = input.ReadUInt32();
            break;
          }
          case 14490: {
            PsnId = input.ReadString();
            break;
          }
          case 16106: {
            CountryCode = input.ReadString();
            break;
          }
          case 16224: {
            Unk2700FLBKPCPGPDH = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
