// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: PlayerMatchSuccNotify.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Weedwacker.Shared.Network.Proto {

  /// <summary>Holder for reflection information generated from PlayerMatchSuccNotify.proto</summary>
  public static partial class PlayerMatchSuccNotifyReflection {

    #region Descriptor
    /// <summary>File descriptor for PlayerMatchSuccNotify.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PlayerMatchSuccNotifyReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChtQbGF5ZXJNYXRjaFN1Y2NOb3RpZnkucHJvdG8aFkdlbmVyYWxNYXRjaElu",
            "Zm8ucHJvdG8aD01hdGNoVHlwZS5wcm90byLeAQoVUGxheWVyTWF0Y2hTdWNj",
            "Tm90aWZ5EiIKGm1lY2hhbmljdXNfZGlmZmljdWx0X2xldmVsGAEgASgNEhIK",
            "CmR1bmdlb25faWQYBiABKA0SHgoKbWF0Y2hfdHlwZRgFIAEoDjIKLk1hdGNo",
            "VHlwZRISCgptcF9wbGF5X2lkGA8gASgNEi0KEmdlbmVyYWxfbWF0Y2hfaW5m",
            "bxgHIAEoCzIRLkdlbmVyYWxNYXRjaEluZm8SEAoIaG9zdF91aWQYAyABKA0S",
            "GAoQY29uZmlybV9lbmRfdGltZRgCIAEoDUIiqgIfV2VlZHdhY2tlci5TaGFy",
            "ZWQuTmV0d29yay5Qcm90b2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Weedwacker.Shared.Network.Proto.GeneralMatchInfoReflection.Descriptor, global::Weedwacker.Shared.Network.Proto.MatchTypeReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Weedwacker.Shared.Network.Proto.PlayerMatchSuccNotify), global::Weedwacker.Shared.Network.Proto.PlayerMatchSuccNotify.Parser, new[]{ "MechanicusDifficultLevel", "DungeonId", "MatchType", "MpPlayId", "GeneralMatchInfo", "HostUid", "ConfirmEndTime" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// CmdId: 4179
  /// EnetChannelId: 0
  /// EnetIsReliable: true
  /// </summary>
  public sealed partial class PlayerMatchSuccNotify : pb::IMessage<PlayerMatchSuccNotify>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlayerMatchSuccNotify> _parser = new pb::MessageParser<PlayerMatchSuccNotify>(() => new PlayerMatchSuccNotify());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PlayerMatchSuccNotify> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Weedwacker.Shared.Network.Proto.PlayerMatchSuccNotifyReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerMatchSuccNotify() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerMatchSuccNotify(PlayerMatchSuccNotify other) : this() {
      mechanicusDifficultLevel_ = other.mechanicusDifficultLevel_;
      dungeonId_ = other.dungeonId_;
      matchType_ = other.matchType_;
      mpPlayId_ = other.mpPlayId_;
      generalMatchInfo_ = other.generalMatchInfo_ != null ? other.generalMatchInfo_.Clone() : null;
      hostUid_ = other.hostUid_;
      confirmEndTime_ = other.confirmEndTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerMatchSuccNotify Clone() {
      return new PlayerMatchSuccNotify(this);
    }

    /// <summary>Field number for the "mechanicus_difficult_level" field.</summary>
    public const int MechanicusDifficultLevelFieldNumber = 1;
    private uint mechanicusDifficultLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MechanicusDifficultLevel {
      get { return mechanicusDifficultLevel_; }
      set {
        mechanicusDifficultLevel_ = value;
      }
    }

    /// <summary>Field number for the "dungeon_id" field.</summary>
    public const int DungeonIdFieldNumber = 6;
    private uint dungeonId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DungeonId {
      get { return dungeonId_; }
      set {
        dungeonId_ = value;
      }
    }

    /// <summary>Field number for the "match_type" field.</summary>
    public const int MatchTypeFieldNumber = 5;
    private global::Weedwacker.Shared.Network.Proto.MatchType matchType_ = global::Weedwacker.Shared.Network.Proto.MatchType.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Weedwacker.Shared.Network.Proto.MatchType MatchType {
      get { return matchType_; }
      set {
        matchType_ = value;
      }
    }

    /// <summary>Field number for the "mp_play_id" field.</summary>
    public const int MpPlayIdFieldNumber = 15;
    private uint mpPlayId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MpPlayId {
      get { return mpPlayId_; }
      set {
        mpPlayId_ = value;
      }
    }

    /// <summary>Field number for the "general_match_info" field.</summary>
    public const int GeneralMatchInfoFieldNumber = 7;
    private global::Weedwacker.Shared.Network.Proto.GeneralMatchInfo generalMatchInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Weedwacker.Shared.Network.Proto.GeneralMatchInfo GeneralMatchInfo {
      get { return generalMatchInfo_; }
      set {
        generalMatchInfo_ = value;
      }
    }

    /// <summary>Field number for the "host_uid" field.</summary>
    public const int HostUidFieldNumber = 3;
    private uint hostUid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint HostUid {
      get { return hostUid_; }
      set {
        hostUid_ = value;
      }
    }

    /// <summary>Field number for the "confirm_end_time" field.</summary>
    public const int ConfirmEndTimeFieldNumber = 2;
    private uint confirmEndTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ConfirmEndTime {
      get { return confirmEndTime_; }
      set {
        confirmEndTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PlayerMatchSuccNotify);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PlayerMatchSuccNotify other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MechanicusDifficultLevel != other.MechanicusDifficultLevel) return false;
      if (DungeonId != other.DungeonId) return false;
      if (MatchType != other.MatchType) return false;
      if (MpPlayId != other.MpPlayId) return false;
      if (!object.Equals(GeneralMatchInfo, other.GeneralMatchInfo)) return false;
      if (HostUid != other.HostUid) return false;
      if (ConfirmEndTime != other.ConfirmEndTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (MechanicusDifficultLevel != 0) hash ^= MechanicusDifficultLevel.GetHashCode();
      if (DungeonId != 0) hash ^= DungeonId.GetHashCode();
      if (MatchType != global::Weedwacker.Shared.Network.Proto.MatchType.None) hash ^= MatchType.GetHashCode();
      if (MpPlayId != 0) hash ^= MpPlayId.GetHashCode();
      if (generalMatchInfo_ != null) hash ^= GeneralMatchInfo.GetHashCode();
      if (HostUid != 0) hash ^= HostUid.GetHashCode();
      if (ConfirmEndTime != 0) hash ^= ConfirmEndTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (MechanicusDifficultLevel != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(MechanicusDifficultLevel);
      }
      if (ConfirmEndTime != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(ConfirmEndTime);
      }
      if (HostUid != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(HostUid);
      }
      if (MatchType != global::Weedwacker.Shared.Network.Proto.MatchType.None) {
        output.WriteRawTag(40);
        output.WriteEnum((int) MatchType);
      }
      if (DungeonId != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(DungeonId);
      }
      if (generalMatchInfo_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(GeneralMatchInfo);
      }
      if (MpPlayId != 0) {
        output.WriteRawTag(120);
        output.WriteUInt32(MpPlayId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (MechanicusDifficultLevel != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(MechanicusDifficultLevel);
      }
      if (ConfirmEndTime != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(ConfirmEndTime);
      }
      if (HostUid != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(HostUid);
      }
      if (MatchType != global::Weedwacker.Shared.Network.Proto.MatchType.None) {
        output.WriteRawTag(40);
        output.WriteEnum((int) MatchType);
      }
      if (DungeonId != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(DungeonId);
      }
      if (generalMatchInfo_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(GeneralMatchInfo);
      }
      if (MpPlayId != 0) {
        output.WriteRawTag(120);
        output.WriteUInt32(MpPlayId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (MechanicusDifficultLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MechanicusDifficultLevel);
      }
      if (DungeonId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DungeonId);
      }
      if (MatchType != global::Weedwacker.Shared.Network.Proto.MatchType.None) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MatchType);
      }
      if (MpPlayId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MpPlayId);
      }
      if (generalMatchInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GeneralMatchInfo);
      }
      if (HostUid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(HostUid);
      }
      if (ConfirmEndTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ConfirmEndTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PlayerMatchSuccNotify other) {
      if (other == null) {
        return;
      }
      if (other.MechanicusDifficultLevel != 0) {
        MechanicusDifficultLevel = other.MechanicusDifficultLevel;
      }
      if (other.DungeonId != 0) {
        DungeonId = other.DungeonId;
      }
      if (other.MatchType != global::Weedwacker.Shared.Network.Proto.MatchType.None) {
        MatchType = other.MatchType;
      }
      if (other.MpPlayId != 0) {
        MpPlayId = other.MpPlayId;
      }
      if (other.generalMatchInfo_ != null) {
        if (generalMatchInfo_ == null) {
          GeneralMatchInfo = new global::Weedwacker.Shared.Network.Proto.GeneralMatchInfo();
        }
        GeneralMatchInfo.MergeFrom(other.GeneralMatchInfo);
      }
      if (other.HostUid != 0) {
        HostUid = other.HostUid;
      }
      if (other.ConfirmEndTime != 0) {
        ConfirmEndTime = other.ConfirmEndTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MechanicusDifficultLevel = input.ReadUInt32();
            break;
          }
          case 16: {
            ConfirmEndTime = input.ReadUInt32();
            break;
          }
          case 24: {
            HostUid = input.ReadUInt32();
            break;
          }
          case 40: {
            MatchType = (global::Weedwacker.Shared.Network.Proto.MatchType) input.ReadEnum();
            break;
          }
          case 48: {
            DungeonId = input.ReadUInt32();
            break;
          }
          case 58: {
            if (generalMatchInfo_ == null) {
              GeneralMatchInfo = new global::Weedwacker.Shared.Network.Proto.GeneralMatchInfo();
            }
            input.ReadMessage(GeneralMatchInfo);
            break;
          }
          case 120: {
            MpPlayId = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MechanicusDifficultLevel = input.ReadUInt32();
            break;
          }
          case 16: {
            ConfirmEndTime = input.ReadUInt32();
            break;
          }
          case 24: {
            HostUid = input.ReadUInt32();
            break;
          }
          case 40: {
            MatchType = (global::Weedwacker.Shared.Network.Proto.MatchType) input.ReadEnum();
            break;
          }
          case 48: {
            DungeonId = input.ReadUInt32();
            break;
          }
          case 58: {
            if (generalMatchInfo_ == null) {
              GeneralMatchInfo = new global::Weedwacker.Shared.Network.Proto.GeneralMatchInfo();
            }
            input.ReadMessage(GeneralMatchInfo);
            break;
          }
          case 120: {
            MpPlayId = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
