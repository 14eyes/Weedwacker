// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: GCGCard.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Weedwacker.Shared.Network.Proto {

  /// <summary>Holder for reflection information generated from GCGCard.proto</summary>
  public static partial class GCGCardReflection {

    #region Descriptor
    /// <summary>File descriptor for GCGCard.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GCGCardReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg1HQ0dDYXJkLnByb3RvGg5HQ0dUb2tlbi5wcm90byKPAQoHR0NHQ2FyZBIM",
            "CgRndWlkGA8gASgNEh0KCnRva2VuX2xpc3QYAiADKAsyCS5HQ0dUb2tlbhIP",
            "Cgdpc19zaG93GA4gASgIEhUKDWNvbnRyb2xsZXJfaWQYByABKA0SCgoCaWQY",
            "BiABKA0SEAoIdGFnX2xpc3QYAyADKA0SEQoJZmFjZV90eXBlGAUgASgNQiKq",
            "Ah9XZWVkd2Fja2VyLlNoYXJlZC5OZXR3b3JrLlByb3RvYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Weedwacker.Shared.Network.Proto.GCGTokenReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Weedwacker.Shared.Network.Proto.GCGCard), global::Weedwacker.Shared.Network.Proto.GCGCard.Parser, new[]{ "Guid", "TokenList", "IsShow", "ControllerId", "Id", "TagList", "FaceType" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class GCGCard : pb::IMessage<GCGCard>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GCGCard> _parser = new pb::MessageParser<GCGCard>(() => new GCGCard());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GCGCard> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Weedwacker.Shared.Network.Proto.GCGCardReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GCGCard() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GCGCard(GCGCard other) : this() {
      guid_ = other.guid_;
      tokenList_ = other.tokenList_.Clone();
      isShow_ = other.isShow_;
      controllerId_ = other.controllerId_;
      id_ = other.id_;
      tagList_ = other.tagList_.Clone();
      faceType_ = other.faceType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GCGCard Clone() {
      return new GCGCard(this);
    }

    /// <summary>Field number for the "guid" field.</summary>
    public const int GuidFieldNumber = 15;
    private uint guid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Guid {
      get { return guid_; }
      set {
        guid_ = value;
      }
    }

    /// <summary>Field number for the "token_list" field.</summary>
    public const int TokenListFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Weedwacker.Shared.Network.Proto.GCGToken> _repeated_tokenList_codec
        = pb::FieldCodec.ForMessage(18, global::Weedwacker.Shared.Network.Proto.GCGToken.Parser);
    private readonly pbc::RepeatedField<global::Weedwacker.Shared.Network.Proto.GCGToken> tokenList_ = new pbc::RepeatedField<global::Weedwacker.Shared.Network.Proto.GCGToken>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Weedwacker.Shared.Network.Proto.GCGToken> TokenList {
      get { return tokenList_; }
    }

    /// <summary>Field number for the "is_show" field.</summary>
    public const int IsShowFieldNumber = 14;
    private bool isShow_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsShow {
      get { return isShow_; }
      set {
        isShow_ = value;
      }
    }

    /// <summary>Field number for the "controller_id" field.</summary>
    public const int ControllerIdFieldNumber = 7;
    private uint controllerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ControllerId {
      get { return controllerId_; }
      set {
        controllerId_ = value;
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 6;
    private uint id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "tag_list" field.</summary>
    public const int TagListFieldNumber = 3;
    private static readonly pb::FieldCodec<uint> _repeated_tagList_codec
        = pb::FieldCodec.ForUInt32(26);
    private readonly pbc::RepeatedField<uint> tagList_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<uint> TagList {
      get { return tagList_; }
    }

    /// <summary>Field number for the "face_type" field.</summary>
    public const int FaceTypeFieldNumber = 5;
    private uint faceType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint FaceType {
      get { return faceType_; }
      set {
        faceType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GCGCard);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GCGCard other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Guid != other.Guid) return false;
      if(!tokenList_.Equals(other.tokenList_)) return false;
      if (IsShow != other.IsShow) return false;
      if (ControllerId != other.ControllerId) return false;
      if (Id != other.Id) return false;
      if(!tagList_.Equals(other.tagList_)) return false;
      if (FaceType != other.FaceType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Guid != 0) hash ^= Guid.GetHashCode();
      hash ^= tokenList_.GetHashCode();
      if (IsShow != false) hash ^= IsShow.GetHashCode();
      if (ControllerId != 0) hash ^= ControllerId.GetHashCode();
      if (Id != 0) hash ^= Id.GetHashCode();
      hash ^= tagList_.GetHashCode();
      if (FaceType != 0) hash ^= FaceType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      tokenList_.WriteTo(output, _repeated_tokenList_codec);
      tagList_.WriteTo(output, _repeated_tagList_codec);
      if (FaceType != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(FaceType);
      }
      if (Id != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(Id);
      }
      if (ControllerId != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(ControllerId);
      }
      if (IsShow != false) {
        output.WriteRawTag(112);
        output.WriteBool(IsShow);
      }
      if (Guid != 0) {
        output.WriteRawTag(120);
        output.WriteUInt32(Guid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      tokenList_.WriteTo(ref output, _repeated_tokenList_codec);
      tagList_.WriteTo(ref output, _repeated_tagList_codec);
      if (FaceType != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(FaceType);
      }
      if (Id != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(Id);
      }
      if (ControllerId != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(ControllerId);
      }
      if (IsShow != false) {
        output.WriteRawTag(112);
        output.WriteBool(IsShow);
      }
      if (Guid != 0) {
        output.WriteRawTag(120);
        output.WriteUInt32(Guid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Guid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Guid);
      }
      size += tokenList_.CalculateSize(_repeated_tokenList_codec);
      if (IsShow != false) {
        size += 1 + 1;
      }
      if (ControllerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ControllerId);
      }
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      size += tagList_.CalculateSize(_repeated_tagList_codec);
      if (FaceType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(FaceType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GCGCard other) {
      if (other == null) {
        return;
      }
      if (other.Guid != 0) {
        Guid = other.Guid;
      }
      tokenList_.Add(other.tokenList_);
      if (other.IsShow != false) {
        IsShow = other.IsShow;
      }
      if (other.ControllerId != 0) {
        ControllerId = other.ControllerId;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      tagList_.Add(other.tagList_);
      if (other.FaceType != 0) {
        FaceType = other.FaceType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            tokenList_.AddEntriesFrom(input, _repeated_tokenList_codec);
            break;
          }
          case 26:
          case 24: {
            tagList_.AddEntriesFrom(input, _repeated_tagList_codec);
            break;
          }
          case 40: {
            FaceType = input.ReadUInt32();
            break;
          }
          case 48: {
            Id = input.ReadUInt32();
            break;
          }
          case 56: {
            ControllerId = input.ReadUInt32();
            break;
          }
          case 112: {
            IsShow = input.ReadBool();
            break;
          }
          case 120: {
            Guid = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 18: {
            tokenList_.AddEntriesFrom(ref input, _repeated_tokenList_codec);
            break;
          }
          case 26:
          case 24: {
            tagList_.AddEntriesFrom(ref input, _repeated_tagList_codec);
            break;
          }
          case 40: {
            FaceType = input.ReadUInt32();
            break;
          }
          case 48: {
            Id = input.ReadUInt32();
            break;
          }
          case 56: {
            ControllerId = input.ReadUInt32();
            break;
          }
          case 112: {
            IsShow = input.ReadBool();
            break;
          }
          case 120: {
            Guid = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
