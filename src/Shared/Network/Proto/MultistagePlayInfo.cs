// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: MultistagePlayInfo.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Weedwacker.Shared.Network.Proto {

  /// <summary>Holder for reflection information generated from MultistagePlayInfo.proto</summary>
  public static partial class MultistagePlayInfoReflection {

    #region Descriptor
    /// <summary>File descriptor for MultistagePlayInfo.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MultistagePlayInfoReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChhNdWx0aXN0YWdlUGxheUluZm8ucHJvdG8aF0NoYXJBbXVzZW1lbnRJbmZv",
            "LnByb3RvGhpIaWRlQW5kU2Vla1N0YWdlSW5mby5wcm90bxoXSW5CYXR0bGVD",
            "aGVzc0luZm8ucHJvdG8aG0luQmF0dGxlRmxldXJGYWlySW5mby5wcm90bxoc",
            "SW5CYXR0bGVNZWNoYW5pY3VzSW5mby5wcm90bxoWSXJvZG9yaUNoZXNzSW5m",
            "by5wcm90byLVAwoSTXVsdGlzdGFnZVBsYXlJbmZvEhIKCnBsYXlfaW5kZXgY",
            "DSABKA0SEQoJcGxheV90eXBlGAsgASgNEhIKCnN0YWdlX3R5cGUYCiABKA0S",
            "EAoIZHVyYXRpb24YCCABKA0SEAoIZ3JvdXBfaWQYDCABKA0SEgoKYmVnaW5f",
            "dGltZRgJIAEoDRITCgtzdGFnZV9pbmRleBgBIAEoDRIzCg9tZWNoYW5pY3Vz",
            "X2luZm8YtgogASgLMhcuSW5CYXR0bGVNZWNoYW5pY3VzSW5mb0gAEjIKD2Zs",
            "ZXVyX2ZhaXJfaW5mbxioCCABKAsyFi5JbkJhdHRsZUZsZXVyRmFpckluZm9I",
            "ABIzChJoaWRlX2FuZF9zZWVrX2luZm8YbCABKAsyFS5IaWRlQW5kU2Vla1N0",
            "YWdlSW5mb0gAEikKCmNoZXNzX2luZm8Y3g0gASgLMhIuSW5CYXR0bGVDaGVz",
            "c0luZm9IABIwChJpcm9kb3JpX2NoZXNzX2luZm8YkwQgASgLMhEuSXJvZG9y",
            "aUNoZXNzSW5mb0gAEjIKE2NoYXJfYW11c2VtZW50X2luZm8YxAIgASgLMhIu",
            "Q2hhckFtdXNlbWVudEluZm9IAEIICgZkZXRhaWxCIqoCH1dlZWR3YWNrZXIu",
            "U2hhcmVkLk5ldHdvcmsuUHJvdG9iBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Weedwacker.Shared.Network.Proto.CharAmusementInfoReflection.Descriptor, global::Weedwacker.Shared.Network.Proto.HideAndSeekStageInfoReflection.Descriptor, global::Weedwacker.Shared.Network.Proto.InBattleChessInfoReflection.Descriptor, global::Weedwacker.Shared.Network.Proto.InBattleFleurFairInfoReflection.Descriptor, global::Weedwacker.Shared.Network.Proto.InBattleMechanicusInfoReflection.Descriptor, global::Weedwacker.Shared.Network.Proto.IrodoriChessInfoReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Weedwacker.Shared.Network.Proto.MultistagePlayInfo), global::Weedwacker.Shared.Network.Proto.MultistagePlayInfo.Parser, new[]{ "PlayIndex", "PlayType", "StageType", "Duration", "GroupId", "BeginTime", "StageIndex", "MechanicusInfo", "FleurFairInfo", "HideAndSeekInfo", "ChessInfo", "IrodoriChessInfo", "CharAmusementInfo" }, new[]{ "Detail" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class MultistagePlayInfo : pb::IMessage<MultistagePlayInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MultistagePlayInfo> _parser = new pb::MessageParser<MultistagePlayInfo>(() => new MultistagePlayInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MultistagePlayInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Weedwacker.Shared.Network.Proto.MultistagePlayInfoReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MultistagePlayInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MultistagePlayInfo(MultistagePlayInfo other) : this() {
      playIndex_ = other.playIndex_;
      playType_ = other.playType_;
      stageType_ = other.stageType_;
      duration_ = other.duration_;
      groupId_ = other.groupId_;
      beginTime_ = other.beginTime_;
      stageIndex_ = other.stageIndex_;
      switch (other.DetailCase) {
        case DetailOneofCase.MechanicusInfo:
          MechanicusInfo = other.MechanicusInfo.Clone();
          break;
        case DetailOneofCase.FleurFairInfo:
          FleurFairInfo = other.FleurFairInfo.Clone();
          break;
        case DetailOneofCase.HideAndSeekInfo:
          HideAndSeekInfo = other.HideAndSeekInfo.Clone();
          break;
        case DetailOneofCase.ChessInfo:
          ChessInfo = other.ChessInfo.Clone();
          break;
        case DetailOneofCase.IrodoriChessInfo:
          IrodoriChessInfo = other.IrodoriChessInfo.Clone();
          break;
        case DetailOneofCase.CharAmusementInfo:
          CharAmusementInfo = other.CharAmusementInfo.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MultistagePlayInfo Clone() {
      return new MultistagePlayInfo(this);
    }

    /// <summary>Field number for the "play_index" field.</summary>
    public const int PlayIndexFieldNumber = 13;
    private uint playIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PlayIndex {
      get { return playIndex_; }
      set {
        playIndex_ = value;
      }
    }

    /// <summary>Field number for the "play_type" field.</summary>
    public const int PlayTypeFieldNumber = 11;
    private uint playType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PlayType {
      get { return playType_; }
      set {
        playType_ = value;
      }
    }

    /// <summary>Field number for the "stage_type" field.</summary>
    public const int StageTypeFieldNumber = 10;
    private uint stageType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint StageType {
      get { return stageType_; }
      set {
        stageType_ = value;
      }
    }

    /// <summary>Field number for the "duration" field.</summary>
    public const int DurationFieldNumber = 8;
    private uint duration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Duration {
      get { return duration_; }
      set {
        duration_ = value;
      }
    }

    /// <summary>Field number for the "group_id" field.</summary>
    public const int GroupIdFieldNumber = 12;
    private uint groupId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint GroupId {
      get { return groupId_; }
      set {
        groupId_ = value;
      }
    }

    /// <summary>Field number for the "begin_time" field.</summary>
    public const int BeginTimeFieldNumber = 9;
    private uint beginTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BeginTime {
      get { return beginTime_; }
      set {
        beginTime_ = value;
      }
    }

    /// <summary>Field number for the "stage_index" field.</summary>
    public const int StageIndexFieldNumber = 1;
    private uint stageIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint StageIndex {
      get { return stageIndex_; }
      set {
        stageIndex_ = value;
      }
    }

    /// <summary>Field number for the "mechanicus_info" field.</summary>
    public const int MechanicusInfoFieldNumber = 1334;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Weedwacker.Shared.Network.Proto.InBattleMechanicusInfo MechanicusInfo {
      get { return detailCase_ == DetailOneofCase.MechanicusInfo ? (global::Weedwacker.Shared.Network.Proto.InBattleMechanicusInfo) detail_ : null; }
      set {
        detail_ = value;
        detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.MechanicusInfo;
      }
    }

    /// <summary>Field number for the "fleur_fair_info" field.</summary>
    public const int FleurFairInfoFieldNumber = 1064;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Weedwacker.Shared.Network.Proto.InBattleFleurFairInfo FleurFairInfo {
      get { return detailCase_ == DetailOneofCase.FleurFairInfo ? (global::Weedwacker.Shared.Network.Proto.InBattleFleurFairInfo) detail_ : null; }
      set {
        detail_ = value;
        detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.FleurFairInfo;
      }
    }

    /// <summary>Field number for the "hide_and_seek_info" field.</summary>
    public const int HideAndSeekInfoFieldNumber = 108;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Weedwacker.Shared.Network.Proto.HideAndSeekStageInfo HideAndSeekInfo {
      get { return detailCase_ == DetailOneofCase.HideAndSeekInfo ? (global::Weedwacker.Shared.Network.Proto.HideAndSeekStageInfo) detail_ : null; }
      set {
        detail_ = value;
        detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.HideAndSeekInfo;
      }
    }

    /// <summary>Field number for the "chess_info" field.</summary>
    public const int ChessInfoFieldNumber = 1758;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Weedwacker.Shared.Network.Proto.InBattleChessInfo ChessInfo {
      get { return detailCase_ == DetailOneofCase.ChessInfo ? (global::Weedwacker.Shared.Network.Proto.InBattleChessInfo) detail_ : null; }
      set {
        detail_ = value;
        detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.ChessInfo;
      }
    }

    /// <summary>Field number for the "irodori_chess_info" field.</summary>
    public const int IrodoriChessInfoFieldNumber = 531;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Weedwacker.Shared.Network.Proto.IrodoriChessInfo IrodoriChessInfo {
      get { return detailCase_ == DetailOneofCase.IrodoriChessInfo ? (global::Weedwacker.Shared.Network.Proto.IrodoriChessInfo) detail_ : null; }
      set {
        detail_ = value;
        detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.IrodoriChessInfo;
      }
    }

    /// <summary>Field number for the "char_amusement_info" field.</summary>
    public const int CharAmusementInfoFieldNumber = 324;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Weedwacker.Shared.Network.Proto.CharAmusementInfo CharAmusementInfo {
      get { return detailCase_ == DetailOneofCase.CharAmusementInfo ? (global::Weedwacker.Shared.Network.Proto.CharAmusementInfo) detail_ : null; }
      set {
        detail_ = value;
        detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.CharAmusementInfo;
      }
    }

    private object detail_;
    /// <summary>Enum of possible cases for the "detail" oneof.</summary>
    public enum DetailOneofCase {
      None = 0,
      MechanicusInfo = 1334,
      FleurFairInfo = 1064,
      HideAndSeekInfo = 108,
      ChessInfo = 1758,
      IrodoriChessInfo = 531,
      CharAmusementInfo = 324,
    }
    private DetailOneofCase detailCase_ = DetailOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DetailOneofCase DetailCase {
      get { return detailCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDetail() {
      detailCase_ = DetailOneofCase.None;
      detail_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MultistagePlayInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MultistagePlayInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayIndex != other.PlayIndex) return false;
      if (PlayType != other.PlayType) return false;
      if (StageType != other.StageType) return false;
      if (Duration != other.Duration) return false;
      if (GroupId != other.GroupId) return false;
      if (BeginTime != other.BeginTime) return false;
      if (StageIndex != other.StageIndex) return false;
      if (!object.Equals(MechanicusInfo, other.MechanicusInfo)) return false;
      if (!object.Equals(FleurFairInfo, other.FleurFairInfo)) return false;
      if (!object.Equals(HideAndSeekInfo, other.HideAndSeekInfo)) return false;
      if (!object.Equals(ChessInfo, other.ChessInfo)) return false;
      if (!object.Equals(IrodoriChessInfo, other.IrodoriChessInfo)) return false;
      if (!object.Equals(CharAmusementInfo, other.CharAmusementInfo)) return false;
      if (DetailCase != other.DetailCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayIndex != 0) hash ^= PlayIndex.GetHashCode();
      if (PlayType != 0) hash ^= PlayType.GetHashCode();
      if (StageType != 0) hash ^= StageType.GetHashCode();
      if (Duration != 0) hash ^= Duration.GetHashCode();
      if (GroupId != 0) hash ^= GroupId.GetHashCode();
      if (BeginTime != 0) hash ^= BeginTime.GetHashCode();
      if (StageIndex != 0) hash ^= StageIndex.GetHashCode();
      if (detailCase_ == DetailOneofCase.MechanicusInfo) hash ^= MechanicusInfo.GetHashCode();
      if (detailCase_ == DetailOneofCase.FleurFairInfo) hash ^= FleurFairInfo.GetHashCode();
      if (detailCase_ == DetailOneofCase.HideAndSeekInfo) hash ^= HideAndSeekInfo.GetHashCode();
      if (detailCase_ == DetailOneofCase.ChessInfo) hash ^= ChessInfo.GetHashCode();
      if (detailCase_ == DetailOneofCase.IrodoriChessInfo) hash ^= IrodoriChessInfo.GetHashCode();
      if (detailCase_ == DetailOneofCase.CharAmusementInfo) hash ^= CharAmusementInfo.GetHashCode();
      hash ^= (int) detailCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (StageIndex != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(StageIndex);
      }
      if (Duration != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(Duration);
      }
      if (BeginTime != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(BeginTime);
      }
      if (StageType != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(StageType);
      }
      if (PlayType != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(PlayType);
      }
      if (GroupId != 0) {
        output.WriteRawTag(96);
        output.WriteUInt32(GroupId);
      }
      if (PlayIndex != 0) {
        output.WriteRawTag(104);
        output.WriteUInt32(PlayIndex);
      }
      if (detailCase_ == DetailOneofCase.HideAndSeekInfo) {
        output.WriteRawTag(226, 6);
        output.WriteMessage(HideAndSeekInfo);
      }
      if (detailCase_ == DetailOneofCase.CharAmusementInfo) {
        output.WriteRawTag(162, 20);
        output.WriteMessage(CharAmusementInfo);
      }
      if (detailCase_ == DetailOneofCase.IrodoriChessInfo) {
        output.WriteRawTag(154, 33);
        output.WriteMessage(IrodoriChessInfo);
      }
      if (detailCase_ == DetailOneofCase.FleurFairInfo) {
        output.WriteRawTag(194, 66);
        output.WriteMessage(FleurFairInfo);
      }
      if (detailCase_ == DetailOneofCase.MechanicusInfo) {
        output.WriteRawTag(178, 83);
        output.WriteMessage(MechanicusInfo);
      }
      if (detailCase_ == DetailOneofCase.ChessInfo) {
        output.WriteRawTag(242, 109);
        output.WriteMessage(ChessInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (StageIndex != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(StageIndex);
      }
      if (Duration != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(Duration);
      }
      if (BeginTime != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(BeginTime);
      }
      if (StageType != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(StageType);
      }
      if (PlayType != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(PlayType);
      }
      if (GroupId != 0) {
        output.WriteRawTag(96);
        output.WriteUInt32(GroupId);
      }
      if (PlayIndex != 0) {
        output.WriteRawTag(104);
        output.WriteUInt32(PlayIndex);
      }
      if (detailCase_ == DetailOneofCase.HideAndSeekInfo) {
        output.WriteRawTag(226, 6);
        output.WriteMessage(HideAndSeekInfo);
      }
      if (detailCase_ == DetailOneofCase.CharAmusementInfo) {
        output.WriteRawTag(162, 20);
        output.WriteMessage(CharAmusementInfo);
      }
      if (detailCase_ == DetailOneofCase.IrodoriChessInfo) {
        output.WriteRawTag(154, 33);
        output.WriteMessage(IrodoriChessInfo);
      }
      if (detailCase_ == DetailOneofCase.FleurFairInfo) {
        output.WriteRawTag(194, 66);
        output.WriteMessage(FleurFairInfo);
      }
      if (detailCase_ == DetailOneofCase.MechanicusInfo) {
        output.WriteRawTag(178, 83);
        output.WriteMessage(MechanicusInfo);
      }
      if (detailCase_ == DetailOneofCase.ChessInfo) {
        output.WriteRawTag(242, 109);
        output.WriteMessage(ChessInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (PlayIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PlayIndex);
      }
      if (PlayType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PlayType);
      }
      if (StageType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StageType);
      }
      if (Duration != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Duration);
      }
      if (GroupId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GroupId);
      }
      if (BeginTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BeginTime);
      }
      if (StageIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StageIndex);
      }
      if (detailCase_ == DetailOneofCase.MechanicusInfo) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(MechanicusInfo);
      }
      if (detailCase_ == DetailOneofCase.FleurFairInfo) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(FleurFairInfo);
      }
      if (detailCase_ == DetailOneofCase.HideAndSeekInfo) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(HideAndSeekInfo);
      }
      if (detailCase_ == DetailOneofCase.ChessInfo) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ChessInfo);
      }
      if (detailCase_ == DetailOneofCase.IrodoriChessInfo) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(IrodoriChessInfo);
      }
      if (detailCase_ == DetailOneofCase.CharAmusementInfo) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(CharAmusementInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MultistagePlayInfo other) {
      if (other == null) {
        return;
      }
      if (other.PlayIndex != 0) {
        PlayIndex = other.PlayIndex;
      }
      if (other.PlayType != 0) {
        PlayType = other.PlayType;
      }
      if (other.StageType != 0) {
        StageType = other.StageType;
      }
      if (other.Duration != 0) {
        Duration = other.Duration;
      }
      if (other.GroupId != 0) {
        GroupId = other.GroupId;
      }
      if (other.BeginTime != 0) {
        BeginTime = other.BeginTime;
      }
      if (other.StageIndex != 0) {
        StageIndex = other.StageIndex;
      }
      switch (other.DetailCase) {
        case DetailOneofCase.MechanicusInfo:
          if (MechanicusInfo == null) {
            MechanicusInfo = new global::Weedwacker.Shared.Network.Proto.InBattleMechanicusInfo();
          }
          MechanicusInfo.MergeFrom(other.MechanicusInfo);
          break;
        case DetailOneofCase.FleurFairInfo:
          if (FleurFairInfo == null) {
            FleurFairInfo = new global::Weedwacker.Shared.Network.Proto.InBattleFleurFairInfo();
          }
          FleurFairInfo.MergeFrom(other.FleurFairInfo);
          break;
        case DetailOneofCase.HideAndSeekInfo:
          if (HideAndSeekInfo == null) {
            HideAndSeekInfo = new global::Weedwacker.Shared.Network.Proto.HideAndSeekStageInfo();
          }
          HideAndSeekInfo.MergeFrom(other.HideAndSeekInfo);
          break;
        case DetailOneofCase.ChessInfo:
          if (ChessInfo == null) {
            ChessInfo = new global::Weedwacker.Shared.Network.Proto.InBattleChessInfo();
          }
          ChessInfo.MergeFrom(other.ChessInfo);
          break;
        case DetailOneofCase.IrodoriChessInfo:
          if (IrodoriChessInfo == null) {
            IrodoriChessInfo = new global::Weedwacker.Shared.Network.Proto.IrodoriChessInfo();
          }
          IrodoriChessInfo.MergeFrom(other.IrodoriChessInfo);
          break;
        case DetailOneofCase.CharAmusementInfo:
          if (CharAmusementInfo == null) {
            CharAmusementInfo = new global::Weedwacker.Shared.Network.Proto.CharAmusementInfo();
          }
          CharAmusementInfo.MergeFrom(other.CharAmusementInfo);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            StageIndex = input.ReadUInt32();
            break;
          }
          case 64: {
            Duration = input.ReadUInt32();
            break;
          }
          case 72: {
            BeginTime = input.ReadUInt32();
            break;
          }
          case 80: {
            StageType = input.ReadUInt32();
            break;
          }
          case 88: {
            PlayType = input.ReadUInt32();
            break;
          }
          case 96: {
            GroupId = input.ReadUInt32();
            break;
          }
          case 104: {
            PlayIndex = input.ReadUInt32();
            break;
          }
          case 866: {
            global::Weedwacker.Shared.Network.Proto.HideAndSeekStageInfo subBuilder = new global::Weedwacker.Shared.Network.Proto.HideAndSeekStageInfo();
            if (detailCase_ == DetailOneofCase.HideAndSeekInfo) {
              subBuilder.MergeFrom(HideAndSeekInfo);
            }
            input.ReadMessage(subBuilder);
            HideAndSeekInfo = subBuilder;
            break;
          }
          case 2594: {
            global::Weedwacker.Shared.Network.Proto.CharAmusementInfo subBuilder = new global::Weedwacker.Shared.Network.Proto.CharAmusementInfo();
            if (detailCase_ == DetailOneofCase.CharAmusementInfo) {
              subBuilder.MergeFrom(CharAmusementInfo);
            }
            input.ReadMessage(subBuilder);
            CharAmusementInfo = subBuilder;
            break;
          }
          case 4250: {
            global::Weedwacker.Shared.Network.Proto.IrodoriChessInfo subBuilder = new global::Weedwacker.Shared.Network.Proto.IrodoriChessInfo();
            if (detailCase_ == DetailOneofCase.IrodoriChessInfo) {
              subBuilder.MergeFrom(IrodoriChessInfo);
            }
            input.ReadMessage(subBuilder);
            IrodoriChessInfo = subBuilder;
            break;
          }
          case 8514: {
            global::Weedwacker.Shared.Network.Proto.InBattleFleurFairInfo subBuilder = new global::Weedwacker.Shared.Network.Proto.InBattleFleurFairInfo();
            if (detailCase_ == DetailOneofCase.FleurFairInfo) {
              subBuilder.MergeFrom(FleurFairInfo);
            }
            input.ReadMessage(subBuilder);
            FleurFairInfo = subBuilder;
            break;
          }
          case 10674: {
            global::Weedwacker.Shared.Network.Proto.InBattleMechanicusInfo subBuilder = new global::Weedwacker.Shared.Network.Proto.InBattleMechanicusInfo();
            if (detailCase_ == DetailOneofCase.MechanicusInfo) {
              subBuilder.MergeFrom(MechanicusInfo);
            }
            input.ReadMessage(subBuilder);
            MechanicusInfo = subBuilder;
            break;
          }
          case 14066: {
            global::Weedwacker.Shared.Network.Proto.InBattleChessInfo subBuilder = new global::Weedwacker.Shared.Network.Proto.InBattleChessInfo();
            if (detailCase_ == DetailOneofCase.ChessInfo) {
              subBuilder.MergeFrom(ChessInfo);
            }
            input.ReadMessage(subBuilder);
            ChessInfo = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            StageIndex = input.ReadUInt32();
            break;
          }
          case 64: {
            Duration = input.ReadUInt32();
            break;
          }
          case 72: {
            BeginTime = input.ReadUInt32();
            break;
          }
          case 80: {
            StageType = input.ReadUInt32();
            break;
          }
          case 88: {
            PlayType = input.ReadUInt32();
            break;
          }
          case 96: {
            GroupId = input.ReadUInt32();
            break;
          }
          case 104: {
            PlayIndex = input.ReadUInt32();
            break;
          }
          case 866: {
            global::Weedwacker.Shared.Network.Proto.HideAndSeekStageInfo subBuilder = new global::Weedwacker.Shared.Network.Proto.HideAndSeekStageInfo();
            if (detailCase_ == DetailOneofCase.HideAndSeekInfo) {
              subBuilder.MergeFrom(HideAndSeekInfo);
            }
            input.ReadMessage(subBuilder);
            HideAndSeekInfo = subBuilder;
            break;
          }
          case 2594: {
            global::Weedwacker.Shared.Network.Proto.CharAmusementInfo subBuilder = new global::Weedwacker.Shared.Network.Proto.CharAmusementInfo();
            if (detailCase_ == DetailOneofCase.CharAmusementInfo) {
              subBuilder.MergeFrom(CharAmusementInfo);
            }
            input.ReadMessage(subBuilder);
            CharAmusementInfo = subBuilder;
            break;
          }
          case 4250: {
            global::Weedwacker.Shared.Network.Proto.IrodoriChessInfo subBuilder = new global::Weedwacker.Shared.Network.Proto.IrodoriChessInfo();
            if (detailCase_ == DetailOneofCase.IrodoriChessInfo) {
              subBuilder.MergeFrom(IrodoriChessInfo);
            }
            input.ReadMessage(subBuilder);
            IrodoriChessInfo = subBuilder;
            break;
          }
          case 8514: {
            global::Weedwacker.Shared.Network.Proto.InBattleFleurFairInfo subBuilder = new global::Weedwacker.Shared.Network.Proto.InBattleFleurFairInfo();
            if (detailCase_ == DetailOneofCase.FleurFairInfo) {
              subBuilder.MergeFrom(FleurFairInfo);
            }
            input.ReadMessage(subBuilder);
            FleurFairInfo = subBuilder;
            break;
          }
          case 10674: {
            global::Weedwacker.Shared.Network.Proto.InBattleMechanicusInfo subBuilder = new global::Weedwacker.Shared.Network.Proto.InBattleMechanicusInfo();
            if (detailCase_ == DetailOneofCase.MechanicusInfo) {
              subBuilder.MergeFrom(MechanicusInfo);
            }
            input.ReadMessage(subBuilder);
            MechanicusInfo = subBuilder;
            break;
          }
          case 14066: {
            global::Weedwacker.Shared.Network.Proto.InBattleChessInfo subBuilder = new global::Weedwacker.Shared.Network.Proto.InBattleChessInfo();
            if (detailCase_ == DetailOneofCase.ChessInfo) {
              subBuilder.MergeFrom(ChessInfo);
            }
            input.ReadMessage(subBuilder);
            ChessInfo = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
